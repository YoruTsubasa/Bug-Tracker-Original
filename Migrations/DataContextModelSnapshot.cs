// <auto-generated />
using System;
using Bug_Tracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BugTracker.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bug_Tracker.Models.CommentDbEntity", b =>
                {
                    b.Property<int>("CommentDbEntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentDbEntityID"));

                    b.Property<int>("CommenterID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketID")
                        .HasColumnType("int");

                    b.HasKey("CommentDbEntityID");

                    b.HasIndex("CommenterID");

                    b.HasIndex("TicketID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Bug_Tracker.Models.ProjectDbEntity", b =>
                {
                    b.Property<int>("ProjectDbEntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectDbEntityID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectDbEntityID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Bug_Tracker.Models.SuperHero", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SuperHeroes");
                });

            modelBuilder.Entity("Bug_Tracker.Models.TicketDbEntity", b =>
                {
                    b.Property<int>("TicketDbEntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketDbEntityID"));

                    b.Property<int>("AssignedDeveloperID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("ProjectDbEntityID")
                        .HasColumnType("int");

                    b.Property<int>("SubmitterID")
                        .HasColumnType("int");

                    b.Property<int>("TicketPriority")
                        .HasColumnType("int");

                    b.Property<int>("TicketStatus")
                        .HasColumnType("int");

                    b.Property<int>("TicketType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("TicketDbEntityID");

                    b.HasIndex("AssignedDeveloperID");

                    b.HasIndex("ProjectDbEntityID");

                    b.HasIndex("SubmitterID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Bug_Tracker.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex(new[] { "Email" }, "IX_Nvarchar_Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bug_Tracker.Models.CommentDbEntity", b =>
                {
                    b.HasOne("Bug_Tracker.Models.User", "Commenter")
                        .WithMany()
                        .HasForeignKey("CommenterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bug_Tracker.Models.TicketDbEntity", "Ticket")
                        .WithMany("Comments")
                        .HasForeignKey("TicketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commenter");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Bug_Tracker.Models.TicketDbEntity", b =>
                {
                    b.HasOne("Bug_Tracker.Models.User", "AssignedDeveloper")
                        .WithMany("DeveloperTickets")
                        .HasForeignKey("AssignedDeveloperID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bug_Tracker.Models.ProjectDbEntity", "Project")
                        .WithMany("Tickets")
                        .HasForeignKey("ProjectDbEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bug_Tracker.Models.User", "Submitter")
                        .WithMany("SubmitterTickets")
                        .HasForeignKey("SubmitterID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AssignedDeveloper");

                    b.Navigation("Project");

                    b.Navigation("Submitter");
                });

            modelBuilder.Entity("Bug_Tracker.Models.ProjectDbEntity", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Bug_Tracker.Models.TicketDbEntity", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Bug_Tracker.Models.User", b =>
                {
                    b.Navigation("DeveloperTickets");

                    b.Navigation("SubmitterTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
